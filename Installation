Installation
Clone the repository:

git clone https://github.com/yourusername/spam-comments-detection.git
Navigate to the project directory:

cd spam-comments-detection
Install the required dependencies:

pip install pandas numpy scikit-learn
Usage
Load the Dataset:


import pandas as pd
data = pd.read_csv("Youtube01-Psy.csv")
print(data.sample(5))
Data Preprocessing:

Select only the necessary columns (CONTENT and CLASS).
Map the class labels to more descriptive terms (Spam Comment and Not Spam).

data = data[["CONTENT", "CLASS"]]
data["CLASS"] = data["CLASS"].map({0: "Not Spam", 1: "Spam Comment"})
Model Training:

Convert the text data into numerical vectors using CountVectorizer.
Split the data into training and testing sets.
Train the Bernoulli Naive Bayes model.

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import BernoulliNB
import numpy as np

x = np.array(data["CONTENT"])
y = np.array(data["CLASS"])

cv = CountVectorizer()
x = cv.fit_transform(x)
xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=42)

model = BernoulliNB()
model.fit(xtrain, ytrain)
print(model.score(xtest, ytest))
Model Testing:

Test the model with sample comments to classify them as spam or not spam.

sample = "Check this out: https://thecleverprogrammer.com/" 
data = cv.transform([sample]).toarray()
print(model.predict(data))  # Output: ['Spam Comment']

sample = "Lack of information!" 
data = cv.transform([sample]).toarray()
print(model.predict(data))  # Output: ['Not Spam']
